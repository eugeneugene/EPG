<Window
    x:Class="EPG.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:localcodeconverters="clr-namespace:EPG.Converters"
    xmlns:localcommands="clr-namespace:EPG.Commands"
    xmlns:localmodels="clr-namespace:EPG.Models"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MainWindow"
    Width="1200"
    Height="800"
    d:DataContext="{d:DesignInstance Type=localmodels:MainWindowModel}"
    Closed="WindowClosed"
    Loaded="WindowLoaded"
    mc:Ignorable="d">
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" Executed="CommandCloseExecuted" />
        <CommandBinding Command="localcommands:EpgCommands.CommandGenerate" Executed="CommandGenerateExecuted" />
        <CommandBinding Command="localcommands:EpgCommands.EditClear" Executed="ClearExecuted" />
    </Window.CommandBindings>
    <Window.Resources>
        <localcodeconverters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <localcodeconverters:UIntConverter x:Key="UIntConverter" />
        <localcodeconverters:ShowHyphenatedEnabledConverter x:Key="ShowHyphenatedEnabledConverter" />
        <localcodeconverters:GenerateEnabledConverter x:Key="GenerateEnabledConverter" />
        <localcodeconverters:DataCollectionVisibleConverter x:Key="DataCollectionVisibleConverter" />
        <localcodeconverters:ColumnVisibleConverter x:Key="ColumnVisibleConverter" />
    </Window.Resources>
    <StackPanel>
        <Menu VerticalAlignment="Top">
            <MenuItem Header="File">
                <MenuItem Command="ApplicationCommands.Close" Header="Exit" />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Command="localcommands:EpgCommands.EditClear" Header="Clear" />
                <Separator />
                <MenuItem
                    Header="AutoClear"
                    IsCheckable="True"
                    IsChecked="{Binding Path=AutoClear}" />
            </MenuItem>
        </Menu>
        <GroupBox Margin="10" Header="Options">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40*" />
                    <ColumnDefinition Width="40*" />
                    <ColumnDefinition Width="20*" />
                </Grid.ColumnDefinitions>
                <GroupBox
                    Grid.Column="0"
                    Margin="5"
                    Header="Mode">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26" />
                            <RowDefinition Height="26" />
                            <RowDefinition Height="26" />
                        </Grid.RowDefinitions>
                        <RadioButton
                            Grid.Row="0"
                            Margin="5"
                            Content="Pronounceable"
                            IsChecked="{Binding Path=PasswordMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static localmodels:PasswordMode.Pronounceable}}" />
                        <CheckBox
                            Grid.Row="1"
                            Margin="10,5,5,5"
                            Content="Show hyphenated passwords"
                            IsChecked="{Binding Path=ShowHyphenated}"
                            IsEnabled="{Binding Path=PasswordMode, Converter={StaticResource ShowHyphenatedEnabledConverter}}" />
                        <RadioButton
                            Grid.Row="2"
                            Margin="5"
                            Content="Random"
                            IsChecked="{Binding Path=PasswordMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static localmodels:PasswordMode.Random}}" />
                    </Grid>
                </GroupBox>
                <GroupBox
                    Grid.Column="1"
                    Margin="5"
                    Header="Amount &amp; Length">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="130" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26" />
                            <RowDefinition Height="26" />
                            <RowDefinition Height="26" />
                        </Grid.RowDefinitions>
                        <Label
                            Grid.Row="0"
                            Grid.Column="0"
                            Content="Number of passwords:" />
                        <TextBox
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="3"
                            Text="{Binding Path=NumberOfPasswords, Converter={StaticResource UIntConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        <Label
                            Grid.Row="1"
                            Grid.Column="0"
                            Content="Minimum length:" />
                        <TextBox
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="3"
                            Text="{Binding Path=MinimumLength, Converter={StaticResource UIntConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        <Label
                            Grid.Row="2"
                            Grid.Column="0"
                            Content="Maximum length:" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="1"
                            Margin="3"
                            Text="{Binding Path=MaximumLength, Converter={StaticResource UIntConverter}, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </GroupBox>
                <Button
                    Grid.Column="2"
                    Width="80"
                    Height="20"
                    Command="localcommands:EpgCommands.CommandGenerate"
                    Content="Generate"
                    Style="{StaticResource PressButtonEffectStyle}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource GenerateEnabledConverter}">
                            <Binding Path="NumberOfPasswords" />
                            <Binding Path="MinimumLength" />
                            <Binding Path="MaximumLength" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
            </Grid>
        </GroupBox>
        <GroupBox Margin="10" Header="Character set">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>
                <CheckBox
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="3"
                    Content="Small symbols"
                    IsChecked="{Binding Path=SmallSymbols}"
                    IsThreeState="{Binding Path=PasswordMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static localmodels:PasswordMode.Random}}" />
                <CheckBox
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="3"
                    Content="Capital symbols"
                    IsChecked="{Binding Path=CapitalSymbols}"
                    IsThreeState="{Binding Path=PasswordMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static localmodels:PasswordMode.Random}}" />
                <CheckBox
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="3"
                    Content="Numerals"
                    IsChecked="{Binding Path=Numerals}"
                    IsThreeState="True" />
                <CheckBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="3"
                    Content="Special symbols"
                    IsChecked="{Binding Path=SpecialSymbols}"
                    IsThreeState="True" />
                <Grid Grid.Row="0" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Exclude symbols:" />
                    <TextBox
                        Grid.Column="1"
                        Margin="3"
                        Text="{Binding Path=Exclude}" />
                </Grid>
                <Grid Grid.Row="1" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Include symbols:" />
                    <TextBox
                        Grid.Column="1"
                        Margin="3"
                        Text="{Binding Path=Include}" />
                </Grid>
            </Grid>
        </GroupBox>
        <GroupBox Margin="10" Header="Restrictions">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="26" />
                    <RowDefinition Height="26" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <CheckBox
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="3"
                    Content="Enable Bloom filter"
                    IsChecked="{Binding Path=EnableBloom}" />
                <CheckBox
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="3"
                    Content="Paranoid check"
                    IsChecked="{Binding Path=ParanoidCheck}" />
                <Grid Grid.Row="0" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="86" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Filter:" />
                    <TextBox
                        Grid.Column="1"
                        Margin="3"
                        Text="{Binding Path=Filter}" />
                    <Button
                        Grid.Column="2"
                        Width="80"
                        Margin="3"
                        Content="Browse"
                        Style="{StaticResource PressButtonEffectStyle}" />
                </Grid>
                <CheckBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="3"
                    Content="Calculate quality"
                    IsChecked="{Binding Path=CalculateQuality}" />
            </Grid>
        </GroupBox>
        <FrameworkElement x:Name="ProxyElement" Visibility="Collapsed" />
        <DataGrid
            Margin="10"
            AutoGenerateColumns="False"
            ColumnHeaderStyle="{DynamicResource DataGridHeaderDefaultStyle}"
            DataContext="{Binding Path=ResultModel}"
            ItemsSource="{Binding Path=DataCollection}"
            Style="{DynamicResource DataGridDefaultStyle}"
            Visibility="{Binding Path=DataCollection, Converter={StaticResource DataCollectionVisibleConverter}}">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Binding="{Binding Password}"
                    Header="Passwords"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Binding="{Binding HyphenatedPassword}"
                    Header="Hyphenated Passwords"
                    IsReadOnly="True"
                    Visibility="{Binding DataContext.ResultModel.ShowHyphenated, Converter={StaticResource ColumnVisibleConverter}, Source={x:Reference ProxyElement}}" />
                <DataGridTextColumn
                    Binding="{Binding BloomFilterResult}"
                    Header="BloomFilter Results"
                    IsReadOnly="True"
                    Visibility="{Binding DataContext.ResultModel.EnableBloom, Converter={StaticResource ColumnVisibleConverter}, Source={x:Reference ProxyElement}}" />
                <DataGridTextColumn
                    Binding="{Binding PasswordQuality}"
                    Header="Passwords Quality"
                    IsReadOnly="True"
                    Visibility="{Binding DataContext.ResultModel.CalculateQuality, Converter={StaticResource ColumnVisibleConverter}, Source={x:Reference ProxyElement}}" />
            </DataGrid.Columns>
        </DataGrid>
    </StackPanel>
</Window>
